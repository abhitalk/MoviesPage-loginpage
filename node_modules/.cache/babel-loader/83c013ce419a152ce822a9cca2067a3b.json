{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/abhirajOnefin/src/components/MoviesPage/index.js\";\nimport { Component } from \"react\";\nimport Cookie from \"js-cookie\";\nimport Navbar from \"../Navbar\";\nimport MoviesCard from \"../MoviesCard\";\nimport { Redirect } from \"react-router-dom\";\nimport ReactModal from \"../Modal/index\";\nimport Modal from \"react-modal\";\nimport Loader from \"react-loader-spinner\";\nimport { LoaderContainer, MoviesPageApp, MainHeading, DetailsContainer, NextPageContainer, PageNumber, NextButton } from \"./styledComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement(\"#root\");\n\nclass MoviesPage extends Component {\n  constructor() {\n    super();\n\n    this.handleOpenModal = id => {\n      const {\n        moviesList\n      } = this.state;\n      const modalResultList = moviesList.filter(eachCard => eachCard.uuid === id);\n      this.setState({\n        showModal: true,\n        modalList: { ...modalResultList\n        }\n      });\n    };\n\n    this.handleCloseModal = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.getMoviesList = async () => {\n      this.setState({\n        isMoviesLoading: true\n      });\n      const {\n        apiUrl\n      } = this.state;\n      const accessToken = localStorage.getItem(\"login-token\");\n      const options = {\n        headers: {\n          Authorization: `Token ${accessToken}`\n        },\n        method: \"GET\"\n      };\n      const response = await fetch(apiUrl, options);\n\n      if (response.status === 200) {\n        const receivedData = await response.json();\n        this.setState({\n          moviesList: receivedData.results,\n          apiUrl: receivedData.next,\n          isSuccessful: true,\n          isMoviesLoading: false\n        });\n      } else if (response.status === 401) {\n        const {\n          history\n        } = this.props;\n        history.replace(\"/login\");\n      } else {\n        this.setState({\n          moviesList: [],\n          isSuccessful: false,\n          isMoviesLoading: false\n        });\n      }\n    };\n\n    this.onNextPage = () => {\n      this.getMoviesList();\n      this.setState(prevState => ({\n        page: prevState.page + 1\n      }));\n    };\n\n    this.filterMovieList = e => {\n      if (e.target.value.trim()) {\n        const newMoviesList = this.state.moviesList.filter(movie => {\n          if (movie.title.toLowerCase().includes(e.target.value.trim().toLowerCase())) {\n            return { ...movie\n            };\n          }\n        });\n        this.setState({\n          moviesList: newMoviesList\n        });\n      }\n    };\n\n    this.renderMoviesPages = () => {\n      const {\n        showModal,\n        page,\n        moviesList,\n        modalList\n      } = this.state;\n      return showModal ? /*#__PURE__*/_jsxDEV(ReactModal, {\n        show: this.state.showModal,\n        handleClose: this.handleCloseModal,\n        card: modalList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(MoviesPageApp, {\n        id: \"Movies-Page-Container\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          filterMovieList: this.filterMovieList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(MainHeading, {\n          children: \"Movies List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DetailsContainer, {\n          children: moviesList.map(eachCard => /*#__PURE__*/_jsxDEV(MoviesCard, {\n            details: eachCard,\n            openModal: this.handleOpenModal\n          }, eachCard.uuid, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(NextPageContainer, {\n          children: [/*#__PURE__*/_jsxDEV(PageNumber, {\n            children: page\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(NextButton, {\n            type: \"button\",\n            onClick: this.onNextPage,\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderSuccessful = () => {\n      const userLocalStorage = localStorage.getItem(\"login-token\");\n\n      if (userLocalStorage === null) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 14\n        }, this);\n      }\n\n      const {\n        isSuccessful\n      } = this.state;\n      return isSuccessful ? this.renderMoviesPages() : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: this.getMoviesList,\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.state = {\n      showModal: false,\n      isSuccessful: true,\n      isMoviesLoading: false,\n      page: 1,\n      moviesList: [],\n      apiUrl: \"https://demo.credy.in/api/v1/maya/movies/\",\n      modalList: [],\n      storedMoviesList: []\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  componentDidMount() {\n    this.getMoviesList();\n  }\n\n  render() {\n    const {\n      isMoviesLoading\n    } = this.state;\n    return isMoviesLoading ? /*#__PURE__*/_jsxDEV(LoaderContainer, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Rings\",\n        color: \"#2d9b63\",\n        height: 80,\n        width: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this) : this.renderSuccessful();\n  }\n\n}\n\nexport default MoviesPage;","map":{"version":3,"sources":["/Users/apple/Downloads/abhirajOnefin/src/components/MoviesPage/index.js"],"names":["Component","Cookie","Navbar","MoviesCard","Redirect","ReactModal","Modal","Loader","LoaderContainer","MoviesPageApp","MainHeading","DetailsContainer","NextPageContainer","PageNumber","NextButton","setAppElement","MoviesPage","constructor","handleOpenModal","id","moviesList","state","modalResultList","filter","eachCard","uuid","setState","showModal","modalList","handleCloseModal","getMoviesList","isMoviesLoading","apiUrl","accessToken","localStorage","getItem","options","headers","Authorization","method","response","fetch","status","receivedData","json","results","next","isSuccessful","history","props","replace","onNextPage","prevState","page","filterMovieList","e","target","value","trim","newMoviesList","movie","title","toLowerCase","includes","renderMoviesPages","map","renderSuccessful","userLocalStorage","storedMoviesList","bind","componentDidMount","render"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport Cookie from \"js-cookie\";\nimport Navbar from \"../Navbar\";\nimport MoviesCard from \"../MoviesCard\";\nimport { Redirect } from \"react-router-dom\";\nimport ReactModal from \"../Modal/index\";\nimport Modal from \"react-modal\";\nimport Loader from \"react-loader-spinner\";\n\nimport {\n  LoaderContainer,\n  MoviesPageApp,\n  MainHeading,\n  DetailsContainer,\n  NextPageContainer,\n  PageNumber,\n  NextButton,\n} from \"./styledComponents\";\n\nModal.setAppElement(\"#root\");\n\nclass MoviesPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      isSuccessful: true,\n      isMoviesLoading: false,\n      page: 1,\n      moviesList: [],\n      apiUrl: \"https://demo.credy.in/api/v1/maya/movies/\",\n      modalList: [],\n      storedMoviesList: []\n    };\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  handleOpenModal = (id) => {\n    const { moviesList } = this.state;\n    const modalResultList = moviesList.filter(\n      (eachCard) => eachCard.uuid === id\n    );\n    this.setState({ showModal: true, modalList: { ...modalResultList } });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  componentDidMount() {\n    this.getMoviesList();\n  }\n\n  getMoviesList = async () => {\n    this.setState({ isMoviesLoading: true });\n    const { apiUrl } = this.state;\n    const accessToken = localStorage.getItem(\"login-token\");\n    const options = {\n      headers: {\n        Authorization: `Token ${accessToken}`,\n      },\n      method: \"GET\",\n    };\n\n    const response = await fetch(apiUrl, options);\n    if (response.status === 200) {\n      const receivedData = await response.json();\n      this.setState({\n        moviesList: receivedData.results,\n        apiUrl: receivedData.next,\n        isSuccessful: true,\n        isMoviesLoading: false,\n      });\n    } else if (response.status === 401) {\n      const { history } = this.props;\n      history.replace(\"/login\");\n    } else {\n      this.setState({\n        moviesList: [],\n        isSuccessful: false,\n        isMoviesLoading: false,\n      });\n    }\n  };\n\n  onNextPage = () => {\n    this.getMoviesList();\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n  };\n\n  filterMovieList = (e) => {\n    if(e.target.value.trim()) {\n      const newMoviesList = this.state.moviesList.filter((movie) => {\n        if(movie.title.toLowerCase().includes(e.target.value.trim().toLowerCase())) {\n          return {...movie};\n        }\n      });\n\n      this.setState({moviesList: newMoviesList});\n    }\n  }\n\n  renderMoviesPages = () => {\n    const { showModal, page, moviesList, modalList } = this.state;\n    return showModal ? (\n      <ReactModal\n        show={this.state.showModal}\n        handleClose={this.handleCloseModal}\n        card={modalList}\n      />\n    ) : (\n      <MoviesPageApp id=\"Movies-Page-Container\">\n        <Navbar filterMovieList={this.filterMovieList}/>\n        <MainHeading>Movies List</MainHeading>\n        <DetailsContainer>\n          {moviesList.map((eachCard) => (\n            <MoviesCard\n              details={eachCard}\n              key={eachCard.uuid}\n              openModal={this.handleOpenModal}\n            />\n          ))}\n        </DetailsContainer>\n        <NextPageContainer>\n        \n          <PageNumber>{page}</PageNumber>\n          <NextButton type=\"button\" onClick={this.onNextPage}>\n            Next\n          </NextButton>\n        </NextPageContainer>\n      </MoviesPageApp>\n    );\n  };\n\n  renderSuccessful = () => {\n    const userLocalStorage = localStorage.getItem(\"login-token\");\n    if (userLocalStorage === null) {\n      return <Redirect to=\"/login\" />;\n    }\n    const { isSuccessful } = this.state;\n    return isSuccessful ? (\n      this.renderMoviesPages()\n    ) : (\n      <div>\n        <button type=\"button\" onClick={this.getMoviesList}>\n          Refresh\n        </button>\n      </div>\n    );\n  };\n\n  render() {\n    const { isMoviesLoading } = this.state;\n    return isMoviesLoading ? (\n      <LoaderContainer>\n        <Loader type=\"Rings\" color=\"#2d9b63\" height={80} width={80} />\n      </LoaderContainer>\n    ) : (\n      this.renderSuccessful()\n    );\n  }\n}\n\nexport default MoviesPage;\n"]},"metadata":{},"sourceType":"module"}