{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Downloads/abhirajOnefin/src/components/Login/index.js\";\nimport { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport Navbar from \"../Navbar\";\nimport toggleTheme from \"../Toggle\";\nimport { LoginAppContainer, LoginSideContainer, LoginSideText, LoginContainer, LoginForm, InputElement, InputLabel, ErrorMessageField, LoginSubmitButton, LoginLoader } from \"./styledComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLoginLoading: false,\n      inputUserError: \"\",\n      inputPasswordError: \"\",\n      username: \"\",\n      password: \"\",\n      apiError: \"\"\n    };\n\n    this.loginSuccess = data => {\n      const successToken = data.token;\n      const {\n        history\n      } = this.props;\n      localStorage.setItem(\"login-token\", successToken);\n      history.replace(\"/\");\n    };\n\n    this.loginFailure = error => {\n      const errorMessage = error.message;\n      this.setState({\n        apiError: errorMessage,\n        inputUserError: \"\",\n        inputPasswordError: \"\"\n      });\n    };\n\n    this.onChangeUser = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.onChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.onClickSubmit = async event => {\n      event.preventDefault();\n      this.setState({\n        isLoginLoading: true\n      });\n      const {\n        password,\n        username\n      } = this.state;\n\n      if (username !== \"\" && password !== \"\") {\n        this.setState({\n          inputUserError: \"\",\n          inputPasswordError: \"\",\n          apiError: \"\"\n        });\n        const userDetails = {\n          username,\n          password\n        };\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(userDetails)\n        };\n        const loginUrl = \"https://demo.credy.in/api/v1/usermodule/login/\";\n        const response = await fetch(loginUrl, options);\n        const receivedData = await response.json();\n\n        if (receivedData.is_success) {\n          this.loginSuccess(receivedData.data);\n        } else {\n          this.loginFailure(receivedData.error);\n        }\n      } else {\n        if (username === \"\" && password !== \"\") {\n          this.setState({\n            inputUserError: \"*Required\"\n          });\n        } else if (username !== \"\" && password === \"\") {\n          this.setState({\n            inputPasswordError: \"*Required\"\n          });\n        } else {\n          this.setState({\n            inputUserError: \"*Required\",\n            inputPasswordError: \"*Required\"\n          });\n        }\n      }\n\n      this.setState({\n        isLoginLoading: false\n      });\n    };\n\n    this.renderLoginForm = () => {\n      const {\n        inputUserError,\n        inputPasswordError,\n        username,\n        password,\n        apiError,\n        isLoginLoading\n      } = this.state;\n      return isLoginLoading ? /*#__PURE__*/_jsxDEV(LoginLoader, {\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"ThreeDots\",\n          color: \"#181279\",\n          height: 80,\n          width: 80\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(LoginContainer, {\n        children: [/*#__PURE__*/_jsxDEV(LoginSideContainer, {\n          children: /*#__PURE__*/_jsxDEV(LoginSideText, {\n            children: \"Login \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(LoginForm, {\n          onSubmit: this.onClickSubmit,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(InputElement, {\n            type: \"text\",\n            id: \"username\",\n            placeholder: \"username\",\n            onChange: this.onChangeUser,\n            value: username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessageField, {\n            children: inputUserError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(InputElement, {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"password\",\n            onChange: this.onChangePassword,\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessageField, {\n            children: inputPasswordError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(LoginSubmitButton, {\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessageField, {\n            children: apiError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this);\n    };\n\n    this.renderLoginLoader = () => /*#__PURE__*/_jsxDEV(LoginLoader, {\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        type: \"Oval\",\n        color: \"#84f0f5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }, this);\n  }\n\n  render() {\n    const {\n      isLoginLoading\n    } = this.state;\n    const userLocalStorage = localStorage.getItem(\"login-token\");\n\n    if (userLocalStorage !== null) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 14\n      }, this);\n    }\n\n    return isLoginLoading ? this.renderLoginForm() : /*#__PURE__*/_jsxDEV(LoginAppContainer, {\n      children: this.renderLoginForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/apple/Downloads/abhirajOnefin/src/components/Login/index.js"],"names":["Component","Redirect","Loader","Navbar","toggleTheme","LoginAppContainer","LoginSideContainer","LoginSideText","LoginContainer","LoginForm","InputElement","InputLabel","ErrorMessageField","LoginSubmitButton","LoginLoader","Login","state","isLoginLoading","inputUserError","inputPasswordError","username","password","apiError","loginSuccess","data","successToken","token","history","props","localStorage","setItem","replace","loginFailure","error","errorMessage","message","setState","onChangeUser","event","target","value","onChangePassword","onClickSubmit","preventDefault","userDetails","options","method","headers","body","JSON","stringify","loginUrl","response","fetch","receivedData","json","is_success","renderLoginForm","renderLoginLoader","render","userLocalStorage","getItem"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport Navbar from \"../Navbar\";\nimport toggleTheme from \"../Toggle\";\n\nimport {\n  LoginAppContainer,\n  LoginSideContainer,\n  LoginSideText,\n  LoginContainer,\n  LoginForm,\n  InputElement,\n  InputLabel,\n  ErrorMessageField,\n  LoginSubmitButton,\n  LoginLoader,\n} from \"./styledComponents\";\n\nclass Login extends Component {\n  state = {\n    isLoginLoading: false,\n    inputUserError: \"\",\n    inputPasswordError: \"\",\n    username: \"\",\n    password: \"\",\n    apiError: \"\",\n  };\n\n  loginSuccess = (data) => {\n    const successToken = data.token;\n    const { history } = this.props;\n    localStorage.setItem(\"login-token\", successToken);\n    history.replace(\"/\");\n  };\n\n  loginFailure = (error) => {\n    const errorMessage = error.message;\n    this.setState({\n      apiError: errorMessage,\n      inputUserError: \"\",\n      inputPasswordError: \"\",\n    });\n  };\n\n  onChangeUser = (event) => {\n    this.setState({ username: event.target.value });\n  };\n\n  onChangePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onClickSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ isLoginLoading: true });\n    const { password, username } = this.state;\n    if (username !== \"\" && password !== \"\") {\n      this.setState({\n        inputUserError: \"\",\n        inputPasswordError: \"\",\n        apiError: \"\",\n      });\n      const userDetails = {\n        username,\n        password,\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(userDetails),\n      };\n      const loginUrl = \"https://demo.credy.in/api/v1/usermodule/login/\";\n\n      const response = await fetch(loginUrl, options);\n      const receivedData = await response.json();\n      if (receivedData.is_success) {\n        this.loginSuccess(receivedData.data);\n      } else {\n        this.loginFailure(receivedData.error);\n      }\n    } else {\n      if (username === \"\" && password !== \"\") {\n        this.setState({ inputUserError: \"*Required\" });\n      } else if (username !== \"\" && password === \"\") {\n        this.setState({ inputPasswordError: \"*Required\" });\n      } else {\n        this.setState({\n          inputUserError: \"*Required\",\n          inputPasswordError: \"*Required\",\n        });\n      }\n    }\n    this.setState({ isLoginLoading: false });\n  };\n\n  renderLoginForm = () => {\n    const {\n      inputUserError,\n      inputPasswordError,\n      username,\n      password,\n      apiError,\n      isLoginLoading,\n    } = this.state;\n    return isLoginLoading ? (\n      <LoginLoader>\n        <Loader type=\"ThreeDots\" color=\"#181279\" height={80} width={80} />\n      </LoginLoader>\n    ) : (\n      <LoginContainer>\n        <LoginSideContainer>\n          <LoginSideText>Login </LoginSideText>\n        </LoginSideContainer>\n        <LoginForm onSubmit={this.onClickSubmit}>\n          <InputLabel htmlFor=\"username\">Username</InputLabel>\n          <InputElement\n            type=\"text\"\n            id=\"username\"\n            placeholder=\"username\"\n            onChange={this.onChangeUser}\n            value={username}\n          />\n          <ErrorMessageField>{inputUserError}</ErrorMessageField>\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\n          <InputElement\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            onChange={this.onChangePassword}\n            value={password}\n          />\n          <ErrorMessageField>{inputPasswordError}</ErrorMessageField>\n          <LoginSubmitButton type=\"submit\">Login</LoginSubmitButton>\n          <ErrorMessageField>{apiError}</ErrorMessageField>\n        </LoginForm>\n      </LoginContainer>\n    );\n  };\n\n  renderLoginLoader = () => (\n    <LoginLoader>\n      <Loader type=\"Oval\" color=\"#84f0f5\" />\n    </LoginLoader>\n  );\n\n  render() {\n    const { isLoginLoading } = this.state;\n    const userLocalStorage = localStorage.getItem(\"login-token\");\n    if (userLocalStorage !== null) {\n      return <Redirect to=\"/\" />;\n    }\n    return isLoginLoading ? (\n      this.renderLoginForm()\n    ) : (\n      <LoginAppContainer>{this.renderLoginForm()}</LoginAppContainer>\n    );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}