{"version":3,"sources":["components/Toggle/index.js","components/Navbar/styledComponents.js","components/Navbar/index.js","components/Login/styledComponents.js","components/Login/index.js","components/MoviesCard/styledComponent.js","components/MoviesCard/index.js","components/Modal/index.js","components/MoviesPage/styledComponents.js","components/MoviesPage/index.js","components/NotFound/index.js","App.js","index.js"],"names":["ToggleTheme","useState","JSON","parse","localStorage","getItem","toggleTheme","setToggleTheme","useEffect","setItem","stringify","document","body","classList","add","remove","console","log","classes","className","onClick","NavContainer","styled","div","LinksContainer","NavbarButton","button","Navbar","props","history","type","placeholder","onChange","e","filterMovieList","to","removeItem","LoginAppContainer","LoginContainer","LoginSideContainer","LoginSideText","h1","LoginForm","form","InputLabel","label","InputElement","input","ErrorMessageField","p","LoginSubmitButton","LoginLoader","Login","state","isLoginLoading","inputUserError","inputPasswordError","username","password","apiError","loginSuccess","data","successToken","token","replace","loginFailure","error","errorMessage","message","setState","onChangeUser","event","target","value","onChangePassword","onClickSubmit","a","preventDefault","userDetails","options","method","headers","fetch","response","json","receivedData","is_success","renderLoginForm","color","height","width","onSubmit","htmlFor","id","renderLoginLoader","this","Component","CardContainer","li","InitialLetter","DetailsCard","NormalHeading","NormalDescription","span","MoviesCard","details","openModal","description","genres","title","uuid","slice","Modal","handleClose","classModal","show","card","LoaderContainer","MoviesPageApp","MainHeading","DetailsContainer","ul","NextPageContainer","PageNumber","NextButton","setAppElement","MoviesPage","handleOpenModal","modalResultList","moviesList","filter","eachCard","showModal","modalList","handleCloseModal","getMoviesList","isMoviesLoading","apiUrl","accessToken","Authorization","status","results","next","isSuccessful","storedMoviesList","onNextPage","prevState","page","newMoviesList","movie","toLowerCase","includes","trim","renderMoviesPages","map","renderSuccessful","bind","NotFound","App","exact","path","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d143d0a0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './index.css';\nimport {ImSwitch} from 'react-icons/im';\n\nfunction ToggleTheme() {\n    const [toggleTheme, setToggleTheme] = useState(\n        () => JSON.parse(localStorage.getItem(\"toggleTheme\")) || \"light\"\n      );\n      useEffect(() => {\n        localStorage.setItem(\"toggleTheme\", JSON.stringify(toggleTheme));\n        document.body.classList.add(toggleTheme); //* componentDidMount\n        return () => {\n          document.body.classList.remove(toggleTheme); //* componentWillUnmount\n          // document.body.classList.add(toggleTheme); //* componentWillUnmount\n          //? it used as cleanup,  (like removing event listeners, cancel the timer etc) and here we are removing the class the we added\n    \n          //? after removing the class its going to check if there's a light class if so it add the dark theme\n          console.log(\"unmount\");\n        };\n      }, [toggleTheme]); //* will run every time the toggleThem change (update)\n      const classes = `${toggleTheme} App`;\n      return (\n        <button\n          className={classes}\n          onClick={() => {\n            return toggleTheme === \"light\"\n              ? setToggleTheme(\"dark\")\n              : setToggleTheme(\"light\");\n          }}\n        >\n         <ImSwitch/>\n        </button>\n      );\n    }\n\nexport default ToggleTheme","import styled from \"styled-components\";\n\nexport const NavContainer = styled.div`\n  background-color: #5bdb94;\n  height: 60px;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  padding: 10px;\n  position: sticky;\n  top: 0;\n  box-shadow: 0 4px 10px #0000001a;\n  -webkit-box-shadow: 0 4px 10px #0000001a;\n`;\n\nexport const LinksContainer = styled.div`\n  width: 200px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  @media (max-width: 575px) {\n    width: 100px;\n  }\n`;\n\nexport const NavbarButton = styled.button`\n  background-color: transparent;\n  border: 1px solid white !important;\n  padding: 5px 20px;\n  border-radius: 5px;\n  float: right;\n  color: white;\n  box-shadow: 0 4px 10px #0000001a;\n  -webkit-box-shadow: 0 4px 10px #0000001a;\n`;\n","import { Link } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport ToggleTheme from \"../Toggle\";\nimport \"./index.css\";\n\nimport {\n  NavContainer,\n  ImageElement,\n  LinksContainer,\n  NavbarButton,\n} from \"./styledComponents\";\n\nconst Navbar = (props) => {\n  const { history } = props;\n  const logoutButton = () => {\n    localStorage.removeItem(\"login-token\");\n  };\n\n  return (\n    <NavContainer>\n      <search>\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          onChange={(e) => props.filterMovieList(e)}\n        />\n      </search>\n      <ToggleTheme />\n      <LinksContainer>\n        <Link to=\"/login\">\n          <NavbarButton type=\"button\" onClick={logoutButton}>\n            Logout\n          </NavbarButton>\n        </Link>\n      </LinksContainer>\n    </NavContainer>\n  );\n};\n\nexport default Navbar;\n","import styled from \"styled-components\";\n\nexport const LoginAppContainer = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  background: #a74d92;\n  min-height: 800px;\n`;\n\nexport const LoginContainer = styled.div`\n  height: 100%;\n  width: 25%;\n  background-color: white;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  margin-top: 10%;\n  box-shadow: 0 4px 10px #0000001a;\n  -webkit-box-shadow: 0 4px 10px #0000001a;\n  -moz-box-shadow: 0 4px 10px #0000001a;\n\n  @media (max-width: 768px) {\n    width: 90%;\n  }\n`;\n\nexport const LoginSideContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2%;\n  @media screen (min-width: 768px) {\n    height: 50vh;\n  }\n`;\n\nexport const LoginSideText = styled.h1`\n  font-family: italic;\n  width: 100%;\n  text-align: center;\n  font-size: 24px;\n  padding: 5% 0%;\n`;\n\nexport const LoginForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding-bottom: 10%;\n`;\n\nexport const InputLabel = styled.label`\n  color: #1c1321;\n  font-family: sans-serif;\n  font-weight: bold;\n  width: 70%;\n  margin: auto;\n  margin-bottom: 3%;\n  margin-top: 0%;\n`;\n\nexport const InputElement = styled.input`\n  border-width: 1px solid #906aa3;\n  color: #000000;\n  padding: 10px;\n  width: 66% !important;\n  border-radius: 5px;\n  margin: auto;\n  background: rgba(192, 192, 192, 0.8);\n  border: none;\n  box-shadow: 0 4px 10px #0000001a;\n  -webkit-box-shadow: 0 4px 10px #0000001a;\n  -moz-box-shadow: 0 4px 10px #0000001a;\n  outline: none;\n`;\n\nexport const ErrorMessageField = styled.p`\n  color: #f13013;\n  font-family: sans-serif;\n  text-align: center;\n`;\n\nexport const LoginSubmitButton = styled.button`\n  color: white;\n  background-color: #a74d92;\n  height: 30px;\n  width: 72%;\n  padding: 10px;\n  border-radius: 5px;\n  border-width: 0px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  align-self: center;\n  box-shadow: 0 4px 10px #0000001a;\n  -webkit-box-shadow: 0 4px 10px #0000001a;\n  -moz-box-shadow: 0 4px 10px #0000001a;\n`;\n\nexport const LoginLoader = styled.div`\n  height: 50vh;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n","import { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Loader from \"react-loader-spinner\";\nimport Navbar from \"../Navbar\";\nimport toggleTheme from \"../Toggle\";\n\nimport {\n  LoginAppContainer,\n  LoginSideContainer,\n  LoginSideText,\n  LoginContainer,\n  LoginForm,\n  InputElement,\n  InputLabel,\n  ErrorMessageField,\n  LoginSubmitButton,\n  LoginLoader,\n} from \"./styledComponents\";\n\nclass Login extends Component {\n  state = {\n    isLoginLoading: false,\n    inputUserError: \"\",\n    inputPasswordError: \"\",\n    username: \"\",\n    password: \"\",\n    apiError: \"\",\n  };\n\n  loginSuccess = (data) => {\n    const successToken = data.token;\n    const { history } = this.props;\n    localStorage.setItem(\"login-token\", successToken);\n    history.replace(\"/\");\n  };\n\n  loginFailure = (error) => {\n    const errorMessage = error.message;\n    this.setState({\n      apiError: errorMessage,\n      inputUserError: \"\",\n      inputPasswordError: \"\",\n    });\n  };\n\n  onChangeUser = (event) => {\n    this.setState({ username: event.target.value });\n  };\n\n  onChangePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onClickSubmit = async (event) => {\n    event.preventDefault();\n    this.setState({ isLoginLoading: true });\n    const { password, username } = this.state;\n    if (username !== \"\" && password !== \"\") {\n      this.setState({\n        inputUserError: \"\",\n        inputPasswordError: \"\",\n        apiError: \"\",\n      });\n      const userDetails = {\n        username,\n        password,\n      };\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(userDetails),\n      };\n      const loginUrl = \"https://demo.credy.in/api/v1/usermodule/login/\";\n\n      const response = await fetch(loginUrl, options);\n      const receivedData = await response.json();\n      if (receivedData.is_success) {\n        this.loginSuccess(receivedData.data);\n      } else {\n        this.loginFailure(receivedData.error);\n      }\n    } else {\n      if (username === \"\" && password !== \"\") {\n        this.setState({ inputUserError: \"*Required\" });\n      } else if (username !== \"\" && password === \"\") {\n        this.setState({ inputPasswordError: \"*Required\" });\n      } else {\n        this.setState({\n          inputUserError: \"*Required\",\n          inputPasswordError: \"*Required\",\n        });\n      }\n    }\n    this.setState({ isLoginLoading: false });\n  };\n\n  renderLoginForm = () => {\n    const {\n      inputUserError,\n      inputPasswordError,\n      username,\n      password,\n      apiError,\n      isLoginLoading,\n    } = this.state;\n    return isLoginLoading ? (\n      <LoginLoader>\n        <Loader type=\"ThreeDots\" color=\"#181279\" height={80} width={80} />\n      </LoginLoader>\n    ) : (\n      <LoginContainer>\n        <LoginSideContainer>\n          <LoginSideText>Login </LoginSideText>\n        </LoginSideContainer>\n        <LoginForm onSubmit={this.onClickSubmit}>\n          <InputLabel htmlFor=\"username\">Username</InputLabel>\n          <InputElement\n            type=\"text\"\n            id=\"username\"\n            placeholder=\"username\"\n            onChange={this.onChangeUser}\n            value={username}\n          />\n          <ErrorMessageField>{inputUserError}</ErrorMessageField>\n          <InputLabel htmlFor=\"password\">Password</InputLabel>\n          <InputElement\n            type=\"password\"\n            id=\"password\"\n            placeholder=\"password\"\n            onChange={this.onChangePassword}\n            value={password}\n          />\n          <ErrorMessageField>{inputPasswordError}</ErrorMessageField>\n          <LoginSubmitButton type=\"submit\">Login</LoginSubmitButton>\n          <ErrorMessageField>{apiError}</ErrorMessageField>\n        </LoginForm>\n      </LoginContainer>\n    );\n  };\n\n  renderLoginLoader = () => (\n    <LoginLoader>\n      <Loader type=\"Oval\" color=\"#84f0f5\" />\n    </LoginLoader>\n  );\n\n  render() {\n    const { isLoginLoading } = this.state;\n    const userLocalStorage = localStorage.getItem(\"login-token\");\n    if (userLocalStorage !== null) {\n      return <Redirect to=\"/\" />;\n    }\n    return isLoginLoading ? (\n      this.renderLoginForm()\n    ) : (\n      <LoginAppContainer>{this.renderLoginForm()}</LoginAppContainer>\n    );\n  }\n}\n\nexport default Login;\n","import styled from \"styled-components\";\n\nexport const CardContainer = styled.li`\n  list-style-type: none;\n  width: 31%;\n  height: 100%;\n  box-shadow: 0 4px 10px #0000001a;\n  -webkit-box-shadow: 0 4px 10px #0000001a;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  align-items: center;\n  margin: 10px;\n  border-radius: 5px;\n  flex-grow: 0;\n  @media (max-width: 768px) {\n    width: 85%;\n    height: 100%;\n  }\n`;\n\nexport const InitialLetter = styled.h1`\n  height: 40px;\n  width: 35px;\n  border-radius: 30px;\n  padding: 10px;\n  color: #233230;\n  background-color: #cbcdcd;\n  border: 1px solid #000000;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const DetailsCard = styled.div`\n  height: 100%;\n  overflow: none;\n  padding: 20px;\n  min-height: 230px;\n  justify-content: flex-start;\n  @media (min-width: 768px) {\n    // height: 25vh;\n  }\n`;\n\nexport const NormalHeading = styled.h1`\n  font-family: \"Trebuchet MS\", \"Lucida Sans Unicode\", \"Lucida Grande\",\n    \"Lucida Sans\", Arial, sans-serif;\n  font-size: 20px;\n  color: #1b201f;\n`;\n\nexport const NormalDescription = styled.span`\n  color: #7e8181;\n  font-size: 15px;\n`;\n","import { Component } from \"react\";\nimport Modal from \"react-modal\";\nimport {\n  CardContainer,\n  InitialLetter,\n  DetailsCard,\n  NormalHeading,\n  NormalDescription,\n} from \"./styledComponent\";\n\nconst MoviesCard = (props) => {\n  const { details, openModal } = props;\n  const { description, genres, title, uuid } = details;\n\n  const cardClick = () => {\n    openModal(uuid);\n  };\n\n  return (\n    <CardContainer onClick={cardClick}>\n      <InitialLetter>{title[0]}</InitialLetter>\n      <DetailsCard>\n        <NormalHeading>\n          Name: <NormalDescription>{title}...</NormalDescription>\n        </NormalHeading>\n        <NormalHeading>\n          description:{\" \"}\n          <NormalDescription>{description.slice(0, 250)}...</NormalDescription>\n        </NormalHeading>\n        <NormalHeading>\n          Genre: <NormalDescription>{genres}...</NormalDescription>\n        </NormalHeading>\n      </DetailsCard>\n    </CardContainer>\n  );\n};\n\nexport default MoviesCard;\n","import \"./modal.css\";\n\nconst Modal = (props) => {\n  const { handleClose, show, card } = props;\n  const classModal = show\n    ? \"modal-container display-block\"\n    : \"modal-container display-none\";\n\n  const { title, description, genres } = card[0];\n\n  return (\n    <div className={classModal}>\n      <div className=\"modal-details-containers\">\n        <h1 className=\"modal-initial\">{title[0]}</h1>\n        <h1 className=\"modal-title\">{title}</h1>\n        <p className=\"modal-heading\">\n          Description: <span className=\"modal-value\">{description}</span>\n        </p>\n        <p className=\"modal-heading\">\n          Genre: <span className=\"modal-value\">{genres}</span>\n        </p>\n        <button type=\"button\" onClick={handleClose} className=\"close-button\">\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import styled from \"styled-components\";\n\nexport const LoaderContainer = styled.div`\n  height: 50vh;\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const MoviesPageApp = styled.div`\n  width: 100%;\n  margin: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const MainHeading = styled.h1`\n  font-family: \"Trebuchet MS\", \"Lucida Sans Unicode\", \"Lucida Grande\",\n    \"Lucida Sans\", Arial, sans-serif;\n  font-size: 50px;\n  font-weight: bold;\n`;\n\nexport const DetailsContainer = styled.ul`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n`;\n\nexport const NextPageContainer = styled.div`\n  width: 150px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n`;\n\nexport const PageNumber = styled.p`\n  color: #000000;\n  border-radius: 5px;\n  padding: 10px 22px;\n  background-color: rgba(91, 219, 148, 0.7);\n  box-shadow: 0 4px 10px #0000001a;\n  -webkit-box-shadow: 0 4px 10px #0000001a;\n  color: white;\n  border: 1px solid white;\n`;\n\nexport const NextButton = styled.button`\n  box-shadow: 0 4px 10px #0000001a;\n  -webkit-box-shadow: 0 4px 10px #0000001a;\n  background-color: rgba(91, 219, 148, 0.7);\n  height: 36px;\n  width: 60px;\n  border: 1px solid white;\n  border-radius: 5px;\n  color: white;\n`;\n","import { Component } from \"react\";\nimport Cookie from \"js-cookie\";\nimport Navbar from \"../Navbar\";\nimport MoviesCard from \"../MoviesCard\";\nimport { Redirect } from \"react-router-dom\";\nimport ReactModal from \"../Modal/index\";\nimport Modal from \"react-modal\";\nimport Loader from \"react-loader-spinner\";\n\nimport {\n  LoaderContainer,\n  MoviesPageApp,\n  MainHeading,\n  DetailsContainer,\n  NextPageContainer,\n  PageNumber,\n  NextButton,\n} from \"./styledComponents\";\n\nModal.setAppElement(\"#root\");\n\nclass MoviesPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      showModal: false,\n      isSuccessful: true,\n      isMoviesLoading: false,\n      page: 1,\n      moviesList: [],\n      apiUrl: \"https://demo.credy.in/api/v1/maya/movies/\",\n      modalList: [],\n      storedMoviesList: [],\n    };\n\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n  }\n\n  handleOpenModal = (id) => {\n    const { moviesList } = this.state;\n    const modalResultList = moviesList.filter(\n      (eachCard) => eachCard.uuid === id\n    );\n    this.setState({ showModal: true, modalList: { ...modalResultList } });\n  };\n\n  handleCloseModal = () => {\n    this.setState({ showModal: false });\n  };\n\n  componentDidMount() {\n    this.getMoviesList();\n  }\n\n  getMoviesList = async () => {\n    this.setState({ isMoviesLoading: true });\n    const { apiUrl } = this.state;\n    const accessToken = localStorage.getItem(\"login-token\");\n    const options = {\n      headers: {\n        Authorization: `Token ${accessToken}`,\n      },\n      method: \"GET\",\n    };\n\n    const response = await fetch(apiUrl, options);\n    if (response.status === 200) {\n      const receivedData = await response.json();\n      this.setState({\n        moviesList: receivedData.results,\n        apiUrl: receivedData.next,\n        isSuccessful: true,\n        isMoviesLoading: false,\n        storedMoviesList: receivedData.results,\n      });\n    } else if (response.status === 401) {\n      const { history } = this.props;\n      history.replace(\"/login\");\n    } else {\n      this.setState({\n        moviesList: [],\n        isSuccessful: false,\n        isMoviesLoading: false,\n        storedMoviesList: [],\n      });\n    }\n  };\n\n  onNextPage = () => {\n    this.getMoviesList();\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n  };\n\n  filterMovieList = (e) => {\n    const newMoviesList = this.state.storedMoviesList.filter((movie) => {\n      if (\n        movie.title.toLowerCase().includes(e.target.value.trim().toLowerCase())\n      ) {\n        return { ...movie };\n      }\n    });\n\n    this.setState({ moviesList: newMoviesList });\n  };\n\n  renderMoviesPages = () => {\n    const { showModal, page, moviesList, modalList } = this.state;\n    return showModal ? (\n      <ReactModal\n        show={this.state.showModal}\n        handleClose={this.handleCloseModal}\n        card={modalList}\n      />\n    ) : (\n      <MoviesPageApp id=\"Movies-Page-Container\">\n        <Navbar filterMovieList={this.filterMovieList} />\n        <MainHeading>Movies List</MainHeading>\n        <DetailsContainer>\n          {moviesList.map((eachCard) => (\n            <MoviesCard\n              details={eachCard}\n              key={eachCard.uuid}\n              openModal={this.handleOpenModal}\n            />\n          ))}\n        </DetailsContainer>\n        <NextPageContainer>\n          <PageNumber>{page}</PageNumber>\n          <NextButton type=\"button\" onClick={this.onNextPage}>\n            Next\n          </NextButton>\n        </NextPageContainer>\n      </MoviesPageApp>\n    );\n  };\n\n  renderSuccessful = () => {\n    const userLocalStorage = localStorage.getItem(\"login-token\");\n    if (userLocalStorage === null) {\n      return <Redirect to=\"/login\" />;\n    }\n    const { isSuccessful } = this.state;\n    return isSuccessful ? (\n      this.renderMoviesPages()\n    ) : (\n      <div>\n        <button type=\"button\" onClick={this.getMoviesList}>\n          Refresh\n        </button>\n      </div>\n    );\n  };\n\n  render() {\n    const { isMoviesLoading } = this.state;\n    return isMoviesLoading ? (\n      <LoaderContainer>\n        <Loader type=\"Rings\" color=\"#2d9b63\" height={80} width={80} />\n      </LoaderContainer>\n    ) : (\n      this.renderSuccessful()\n    );\n  }\n}\n\nexport default MoviesPage;\n","import Navbar from \"../Navbar\";\n\nconst NotFound = () => (\n  <div>\n    <Navbar />\n    <h1>Not Found</h1>\n  </div>\n);\n\nexport default NotFound;\n","import Login from \"./components/Login\";\nimport MoviesPage from \"./components/MoviesPage\";\nimport NotFound from \"./components/NotFound\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ProtectedLogin from \"./components/ProtectedLogin\";\n\n\nconst App = () => (\n  <Switch>\n    <Route exact path=\"/login\" component={Login} />\n    <Route exact path=\"/\" component={MoviesPage} />\n    <Route component={NotFound} />\n  </Switch>\n);\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}